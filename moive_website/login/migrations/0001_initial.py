# Generated by Django 2.2.28 on 2022-06-21 08:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=45, verbose_name='密码')),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('type', models.IntegerField()),
                ('song_id', models.PositiveIntegerField(blank=True, null=True)),
                ('song_list_id', models.PositiveIntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'collect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('song_id', models.PositiveIntegerField(blank=True, null=True)),
                ('song_list_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField()),
                ('up', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('phone_num', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('email', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('birth', models.DateTimeField(blank=True, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=45, null=True)),
                ('avator', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'consumer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.PositiveIntegerField()),
                ('song_list_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'list_song',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankList',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('songlistid', models.BigIntegerField(db_column='songListId')),
                ('consumerid', models.BigIntegerField(db_column='consumerId')),
                ('score', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'rank_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Singer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('pic', models.CharField(blank=True, max_length=255, null=True)),
                ('birth', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=45, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'singer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singer_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=45)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('create_time', models.DateTimeField()),
                ('update_time', models.DateTimeField()),
                ('pic', models.CharField(blank=True, max_length=255, null=True)),
                ('lyric', models.TextField(blank=True, null=True)),
                ('url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'song',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pic', models.CharField(blank=True, max_length=255, null=True)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('style', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'song_list',
                'managed': False,
            },
        ),
    ]
